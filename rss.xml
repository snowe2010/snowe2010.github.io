<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title/>
    <description/>
    <link>http://ajourneyinerrors.nfshost.com</link>
    <pubDate>2013-10-14</pubDate>
    <item>
      <title>42</title>
      <link>http://ajourneyinerrors.nfshost.com/</link>
      <description>&lt;h2 id="toc_0"&gt;My Life&lt;/h2&gt;

&lt;p&gt;I was born in Texas. I grew up in Waco. I now live in Colorado, where I&amp;#39;m a student at the Colorado School of Mines. I currently work for Recondo Technology located in Greenwood Village, CO, where my job is Software Testing. &lt;/p&gt;

&lt;p&gt;I have a lovely girlfriend named Sabrina, and I have a cat named Athena. I like to snowboard, slackline, teach others, and most of all Ruby. I&amp;#39;m currently taking several courses on edX, Coursera, and Udacity while taking classes here at CSM. &lt;/p&gt;

&lt;p&gt;I&amp;#39;ve got a ton of things I&amp;#39;ve worked on and even though a lot of them are private you can still view the remaining ones at my github profile. @snowe2010&lt;/p&gt;

&lt;p&gt;You can also see some of the problems I&amp;#39;ve encountered over at ajourneyinerrors.nfshost.com if you&amp;#39;re interested. I have a hard time keeping it updated though, probably because I suck at css so it discourages me from actually writing anything that would get people to actually visit my page. &lt;/p&gt;

&lt;p&gt;&#x201C;I&amp;#39;d far rather be happy than right any day.&#x201D; &lt;/p&gt;

&lt;p&gt;&#x2015; Douglas Adams, The Hitchhiker&amp;#39;s Guide to the Galaxy&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Blog</title>
      <link>http://ajourneyinerrors.nfshost.com/blog</link>
      <description>&lt;ul class="match-width"&gt;
  &lt;li&gt;
    &lt;h2&gt;&lt;a href="/blog/sytaxhighlighter-and-a-rewrite"&gt;Rewriting Sytax Highlighter&lt;/a&gt;&lt;/h2&gt;
    &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I started the tutorials section by trying to write a post about how to get Ruhoh up and running nice and quick. 
I used code sections to make things easier, and for that I had to find a good syntax highlighter. 
I didn't like the way that Google's PrettyPrint worked and I couldn't get SyntaxHighlighter to work 
(which I later discovered was just because I didn't understand javascript very well) so I went through 
a ton of different syntax highlighters until I finally learned enough JS from those that I realized 
I was an idiot when trying to use SyntaxHighlighter.&lt;/p&gt;

&lt;p&gt;As a result of all this, I've learned very well how to use Chrome's javascript debugging and breakpoints. 
The better lesson is, I learned that syntax highlighting is more difficult than it looks :| 
I'll try to cover some of these difficulties below.&lt;/p&gt;

&lt;/div&gt;
    &lt;a href="/blog/sytaxhighlighter-and-a-rewrite"&gt;read post...&lt;/a&gt;
  &lt;/li&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
  &lt;li&gt;
    &lt;h2&gt;&lt;a href="/blog/move-to-ruhoh-from-jekyll"&gt;Move to Ruhoh from Jekyll&lt;/a&gt;&lt;/h2&gt;
    &lt;div class="summary ellipsis"&gt;
&lt;h3 id="toc_0"&gt;Ruhoh, a better Jekyll&lt;/h3&gt;

&lt;p&gt;I've begun a move over to the Ruhoh platform. One of the main reasons for this is because I absolutely hate the Liquid Templating system used by Jekyll. 
Ruhoh uses Moustache which seems to be a much nicer choice overall. Also Ruhoh separates everything nice and neat like. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Content&lt;/li&gt;
&lt;li&gt;Views&lt;/li&gt;
&lt;li&gt;Presentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I don't need to worry about my presentation until I've actually gotten content. 
Another great this is that handling folders and links is a thousand times easier in Ruhoh. &lt;/p&gt;

&lt;p&gt;&lt;/div&gt;
    &lt;a href="/blog/move-to-ruhoh-from-jekyll"&gt;read post...&lt;/a&gt;
  &lt;/li&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
  &lt;li&gt;
    &lt;h2&gt;&lt;a href="/blog/fignewton-with-rspec"&gt;Problems with Fig Newton, RSpec, and Cheezy&amp;#39;s Cucumber &amp;amp; Cheese&lt;/a&gt;&lt;/h2&gt;
    &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I use Watir-webdriver, PageObject, and several other gems 
(at the instruction of Jeff &amp;quot;Cheezy&amp;quot; Morgan), for my job. 
Currently I&amp;#39;ve been writing tests to perform some functions 
that business people have no care or need to know about. 
Because there is no need to have business rules for these tests, 
I&amp;#39;m using RSpec instead of Cucumber. I have Cucumber tests to run 
all of the business rules that the BA&amp;#39;s need to know about and RSpec 
tests for those side scripts or non-business side of things. I&amp;#39;ve also 
read up extensively on Jeff&amp;#39;s Cucumber &amp;amp; Cheese book, though I had forgotten several key points. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;For these tests I was trying to load Default Data for different environments, 
and therefore I was using Jeff's FigNewton gem. FigNewton allows the use of 
different configuration files based on the environment the script is being run from. 
For this you need to place require 'fig&lt;em&gt;newton' in the correct place and also call 
FigNewton.load('local.yml') with whatever file you want to load. 
If you don't want to use a specific file you can leave out the line and it will 
first look for an ENV variable called FIG&lt;/em&gt;NEWTON_FILE, then if that is not found 
it will look for a file named after the hostname of the computer, and then finally 
if even that is not found it will look for a file called 'default.yml'. &lt;/p&gt;

&lt;p&gt;&lt;/div&gt;
    &lt;a href="/blog/fignewton-with-rspec"&gt;read post...&lt;/a&gt;
  &lt;/li&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
  &lt;li&gt;
    &lt;h2&gt;&lt;a href="/blog/logging-my-errors"&gt;Logging My Errors&lt;/a&gt;&lt;/h2&gt;
    &lt;div class="summary"&gt;&lt;p&gt;This is the story of my life. The problems I&amp;#39;ve come across and the solutions I&amp;#39;ve used to solve them. Not just compile time errors, or problems debugging, but the relationships in my life also. This is a manifesto of the reasons I chose to do specific things, why I am the way I am, and how I deal with those around me. This is my life.  &lt;/p&gt;&lt;/div&gt;
    &lt;a href="/blog/logging-my-errors"&gt;read post...&lt;/a&gt;
  &lt;/li&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;!-- 
&lt;div class="page"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/blog/sytaxhighlighter-and-a-rewrite"&gt;Rewriting Sytax Highlighter&lt;/a&gt;&lt;/h3&gt;&lt;h5 class="align-even"&gt;&lt;span class="date"&gt;2013-10-13&lt;/span&gt;&lt;/h5&gt;
  &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I started the tutorials section by trying to write a post about how to get Ruhoh up and running nice and quick. 
I used code sections to make things easier, and for that I had to find a good syntax highlighter. 
I didn't like the way that Google's PrettyPrint worked and I couldn't get SyntaxHighlighter to work 
(which I later discovered was just because I didn't understand javascript very well) so I went through 
a ton of different syntax highlighters until I finally learned enough JS from those that I realized 
I was an idiot when trying to use SyntaxHighlighter.&lt;/p&gt;

&lt;p&gt;As a result of all this, I've learned very well how to use Chrome's javascript debugging and breakpoints. 
The better lesson is, I learned that syntax highlighting is more difficult than it looks :| 
I'll try to cover some of these difficulties below.&lt;/p&gt;

&lt;/div&gt;
  &lt;div class="more"&gt;
    &lt;a href="/blog/sytaxhighlighter-and-a-rewrite" class="btn"&gt;read post..&lt;/a&gt;
  &lt;/div&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
&lt;/div&gt;

&lt;div class="page"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/blog/move-to-ruhoh-from-jekyll"&gt;Move to Ruhoh from Jekyll&lt;/a&gt;&lt;/h3&gt;&lt;h5 class="align-even"&gt;&lt;span class="date"&gt;2013-10-09&lt;/span&gt;&lt;/h5&gt;
  &lt;div class="summary ellipsis"&gt;
&lt;h3 id="toc_0"&gt;Ruhoh, a better Jekyll&lt;/h3&gt;

&lt;p&gt;I've begun a move over to the Ruhoh platform. One of the main reasons for this is because I absolutely hate the Liquid Templating system used by Jekyll. 
Ruhoh uses Moustache which seems to be a much nicer choice overall. Also Ruhoh separates everything nice and neat like. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Content&lt;/li&gt;
&lt;li&gt;Views&lt;/li&gt;
&lt;li&gt;Presentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So I don't need to worry about my presentation until I've actually gotten content. 
Another great this is that handling folders and links is a thousand times easier in Ruhoh. &lt;/p&gt;

&lt;/div&gt;
  &lt;div class="more"&gt;
    &lt;a href="/blog/move-to-ruhoh-from-jekyll" class="btn"&gt;read post..&lt;/a&gt;
  &lt;/div&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
&lt;/div&gt;

&lt;div class="page"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/blog/fignewton-with-rspec"&gt;Problems with Fig Newton, RSpec, and Cheezy's Cucumber &amp;amp; Cheese&lt;/a&gt;&lt;/h3&gt;&lt;h5 class="align-even"&gt;&lt;span class="date"&gt;2013-06-01&lt;/span&gt;&lt;/h5&gt;
  &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I use Watir-webdriver, PageObject, and several other gems 
(at the instruction of Jeff "Cheezy" Morgan), for my job. 
Currently I've been writing tests to perform some functions 
that business people have no care or need to know about. 
Because there is no need to have business rules for these tests, 
I'm using RSpec instead of Cucumber. I have Cucumber tests to run 
all of the business rules that the BA's need to know about and RSpec 
tests for those side scripts or non-business side of things. I've also 
read up extensively on Jeff's Cucumber &amp;amp; Cheese book, though I had forgotten several key points. &lt;/p&gt;

&lt;p&gt;For these tests I was trying to load Default Data for different environments, 
and therefore I was using Jeff's FigNewton gem. FigNewton allows the use of 
different configuration files based on the environment the script is being run from. 
For this you need to place require 'fig&lt;em&gt;newton' in the correct place and also call 
FigNewton.load('local.yml') with whatever file you want to load. 
If you don't want to use a specific file you can leave out the line and it will 
first look for an ENV variable called FIG&lt;/em&gt;NEWTON_FILE, then if that is not found 
it will look for a file named after the hostname of the computer, and then finally 
if even that is not found it will look for a file called 'default.yml'. &lt;/p&gt;
&lt;/div&gt;
  &lt;div class="more"&gt;
    &lt;a href="/blog/fignewton-with-rspec" class="btn"&gt;read post..&lt;/a&gt;
  &lt;/div&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
&lt;/div&gt;

&lt;div class="page"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/blog/logging-my-errors"&gt;Logging My Errors&lt;/a&gt;&lt;/h3&gt;&lt;h5 class="align-even"&gt;&lt;span class="date"&gt;2013-04-26&lt;/span&gt;&lt;/h5&gt;
  &lt;div class="summary"&gt;&lt;p&gt;This is the story of my life. The problems I've come across and the solutions I've used to solve them. Not just compile time errors, or problems debugging, but the relationships in my life also. This is a manifesto of the reasons I chose to do specific things, why I am the way I am, and how I deal with those around me. This is my life.  &lt;/p&gt;&lt;/div&gt;
  &lt;div class="more"&gt;
    &lt;a href="/blog/logging-my-errors" class="btn"&gt;read post..&lt;/a&gt;
  &lt;/div&gt;
  &lt;br/&gt;
  &lt;hr class="style-two"&gt;
&lt;/div&gt;

  Newer: &lt;a href="/"&gt;42&lt;/a&gt;
 --&gt;
</description>
    </item>
    <item>
      <title>Tutorials</title>
      <link>http://ajourneyinerrors.nfshost.com/tutorials</link>
      <description>&lt;ul&gt;
&lt;/ul&gt;

&lt;p class="center"&gt;Nothing here yet! Come back later!&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
